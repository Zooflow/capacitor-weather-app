---
import Layout from '../layouts/Layout.astro';
import "../styles/global.css";
---

<Layout title="Weather app">
	<main class="bg-gray-900 h-screen">
		<h1 class="text-2xl font-bold text-blue-500">Clima en Temuco</h1>
    <div id="loading" class="mt-4 text-center">
      <p>Cargando datos del clima...</p>
    </div>
    <div id="forecast-container" class="grid grid-cols-2 gap-4 mt-4" style="display: none;">
      <!-- Forecast items will be added here by JavaScript -->
    </div>
    <div id="error-message" class="mt-4 text-center text-red-600" style="display: none;">
      <p>Error al cargar los datos del clima. Por favor, intente nuevamente más tarde.</p>
    </div>
	</main>
</Layout>
<script>
  document.addEventListener('DOMContentLoaded', async () => {
    const loadingElement = document.getElementById('loading');
    const forecastContainer = document.getElementById('forecast-container');
    const errorMessage = document.getElementById('error-message');

    try {
      // Fetch weather data from the API endpoint
      const response = await fetch("/api/weather");
      
      // Check if the request was successful
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      
      const weatherData = await response.json();
      const forecast = weatherData.list.slice(0, 5); // First 5 days
      
      // Create and append forecast items
      forecast.forEach((day, index) => {
        const forecastItem = document.createElement('div');
        forecastItem.className = 'bg-gray-800 p-4 rounded-lg text-center';
        
        const dateElem = document.createElement('p');
        dateElem.className = 'text-lg font-bold text-white';
        dateElem.textContent = new Date(day.dt * 1000).toLocaleDateString();
        forecastItem.appendChild(dateElem);
        
        const iconElem = document.createElement('img');
        iconElem.src = `https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`;
        iconElem.alt = 'icono';
        forecastItem.appendChild(iconElem);
        
        const tempElem = document.createElement('p');
        tempElem.className = 'text-xl text-white';
        tempElem.textContent = `${day.main.temp}°C`;
        forecastItem.appendChild(tempElem);
        
        forecastContainer.appendChild(forecastItem);
      });
      
      // Hide loading message and show forecast
      loadingElement.style.display = 'none';
      forecastContainer.style.display = 'grid';
    } catch (error) {
      console.error('Error fetching weather data:', error);
      
      // Hide loading message and show error
      loadingElement.style.display = 'none';
      errorMessage.style.display = 'block';
    }
  });
</script>
